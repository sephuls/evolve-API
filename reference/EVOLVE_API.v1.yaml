openapi: 3.0.0
info:
  title: Evolve API
  version: '1.0'
  description: |-
    Evolve API docs. Voulez-vous evolve avec moi ce soir?

    Voor front-end implementatiedetails zie de "Front end" pagina onder "Implementatie".


    ### API connectie
    Voor connectie met de API loop de volgende stappen door:

    ```
    $ git checkout develop
    $ git pull develop
    $ source environment.bash
    $ pse_env
    $ > cd issue_tracker
    ```

    > (Optioneel) update database:
    > ```
    > $ > python3 manage.py migrate.py
    > ```

    > (Optioneel) reïnitialiseer database:
    > ```
    > $ > rm db.sqlite3
    > $ > python3 manage.py migrate.py
    > ```

    ### Start webserver:
    ```
    $ > python3 manage.py runserver
    ```

    Connect met api-endpoints: `localhost:8000/api/endpoint`

    Open admin-(db)pagina: `localhost:8000/admin` en log in met: `superuser@test.nl` en`test`.

    <!-- theme: info -->

    > Als er geen superuser aangemaakt is kun je dat zelf doen:
    > ```
    > $ > python3 manage.py createsuperuser
    > ```
  contact: {}
servers:
  - url: 'http://35.156.237.48:8000/api/'
    description: Testserver
  - url: 'http://localhost:8000/api'
    description: Lokaal
paths:
  /user/new/:
    parameters: []
    post:
      summary: Create a new user
      operationId: post-user-new
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: object
                    required:
                      - access_token
                      - user_id
                    properties:
                      access_token:
                        type: string
                        example: c7a19cf986eeb6b447719aadbc58f98b061c28b3
                      user_id:
                        type: integer
                        example: 5
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response:
                      access_token: c7a19cf986eeb6b447719aadbc58f98b061c28b3
                      user_id: 5
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: |-
        Maak een nieuwe user aan. Returnt een `access_token` en een `user_id`.

        Verificatie is nog niet geïmplementeerd.
      parameters:
        - schema:
            type: string
            default: text/plain
            example: application/json
          in: header
          name: Content-Type
          description: ''
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  maxLength: 254
                  example: 12345678@student.uva.nl
                  description: e-mail veld
                password:
                  type: string
                  example: mijnpasswordinplaintext
                  maxLength: 254
                  minLength: 9
                  description: plaintext wachtwoord
                first_name:
                  type: string
                  example: Isabel
                  description: voornaam
                last_name:
                  type: string
                  example: de Jong
                  description: achternaam
                uva_id:
                  type: integer
                  description: uva id
                  example: 12345678
              required:
                - email
                - password
                - first_name
                - last_name
                - uva_id
            examples:
              Voorbeeld:
                value:
                  email: 12345678@student.uva.nl
                  password: mijnpasswordinplaintext
                  first_name: Isabel
                  last_name: de Jong
                  uva_id: 12345678
        description: 'POST data, in JSON formaat.'
      tags:
        - User
  /comment/new/:
    parameters: []
    post:
      summary: Create a new comment
      operationId: post-comment-new
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: object
                    required:
                      - comment_id
                    properties:
                      comment_id:
                        type: integer
                        example: 0
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response:
                      access_token: c7a19cf986eeb6b447719aadbc58f98b061c28b3
                      user_id: 5
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: |-
        Maak een nieuwe comment aan.

        Een comment is gelinkt aan een parent issue óf een parent comment, maar heeft altijd een gelinkte issue.
      parameters:
        - schema:
            type: string
            default: text/plain
            example: application/json
          in: header
          name: Content-Type
          description: ''
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                issue_id:
                  type: integer
                parent_comment_id:
                  type: integer
                parent_issue_id:
                  type: integer
              required:
                - body
                - issue_id
            examples:
              Voorbeeld 1:
                value:
                  body: 'Daar ben ik het niet mee eens, ...'
                  issue_id: 12
                  parent_issue_id: 12
              Voorbeeld 2:
                value:
                  body: 'Daar ben ik het niet mee eens, ...'
                  issue_id: 12
                  parent_comment_id: 1
        description: 'POST data, in JSON formaat.'
      tags:
        - Comment
  '/user/{user_id}/':
    parameters:
      - schema:
          type: integer
          example: 123
        name: user_id
        in: path
        required: true
    get:
      summary: Get user details
      operationId: get-user-details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: object
                    required:
                      - user_id
                      - first_name
                      - last_name
                    properties:
                      user_id:
                        type: integer
                      email:
                        type: string
                      uva_id:
                        type: integer
                      first_name:
                        type: string
                      last_name:
                        type: string
                required:
                  - error
                  - response
              examples:
                Voorbeeld 1:
                  value:
                    error: 0
                    response:
                      user_id: '42'
                      email: 12345678@student.uva.nl
                      uva_id: 12345678
                      first_name: Isabel
                      last_name: de Jong
                Voorbeeld 2:
                  value:
                    error: 0
                    response:
                      user_id: '42'
                      first_name: Isabel
                      last_name: de Jong
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: |-
        Haalt user info op.

        Email en uva-id wordt meegegeven als de opgevraagde user de ingelogde user is of als de ingelogde user OC is.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
      tags:
        - User
  /user/all/:
    parameters:
      - schema:
          type: integer
          example: 123
        name: user_id
        in: path
        required: true
    get:
      summary: Get users
      operationId: get-user-all
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: array
                    items:
                      type: object
                      properties:
                        user_id:
                          type: integer
                        first_name:
                          type: string
                        last_name:
                          type: string
                        role:
                          type: integer
                          description: hoogste rol
                      required:
                        - user_id
                        - first_name
                        - last_name
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response:
                      - user_id: 1
                        first_name: u1first
                        last_name: u1last
                        role: 3
                      - user_id: 2
                        first_name: u2first
                        last_name: u2last
                        role: 1
                      - user_id: 3
                        first_name: een
                        last_name: TA
                        role: 2
                      - user_id: 4
                        first_name: jeffrey
                        last_name: spaan
                        role: 3
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: |-
        Haalt users op. Mogelijkheid tot zoeken op voornaam+achternaam.

        Matcht gegeven zoekstring (case-independent) ergens in de voornaam+achternaam. `?search='as dek'` geeft bijvoorbeeld de user `Jonas Dekker`. Zoeken is niet verplicht.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
        - schema:
            type: string
          in: query
          name: search
          description: zoek op voor+achternaam
      tags:
        - User
  '/user/{user_id}/issues/':
    parameters:
      - schema:
          type: integer
          example: 123
        name: user_id
        in: path
        required: true
    get:
      summary: Get user issues
      operationId: get-user-issues
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: array
                    items:
                      type: object
                      properties:
                        issue_id:
                          type: integer
                        course:
                          type: object
                          properties:
                            code:
                              type: string
                            name:
                              type: string
                        user_id:
                          type: integer
                        title:
                          type: string
                        body:
                          type: string
                        status:
                          type: integer
                          description: '0:public, 1: removed, 2:resolved'
                        date:
                          type: string
                        upvotes:
                          type: integer
                          description: aantal upvotes
                        downvotes:
                          type: integer
                          description: aantal downvotes
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response:
                      - issue_id: 1
                        course:
                          code: course1
                          name: Mijn course naam
                        user_id: 1
                        title: Issue1
                        body: body1
                        status: 0
                        date: '2020-06-04T20:59:22.859Z'
                        upvotes: 1
                        downvotes: 1
                      - issue_id: 2
                        course:
                          code: course1
                          name: Mijn course naam
                        user_id: 2
                        title: Issue2
                        body: body2
                        status: 2
                        date: '2021-06-04T20:59:22.859Z'
                        upvotes: 2
                        downvotes: 1
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: |-
        Haalt alle issues van de user op. Toont ook verwijderde issues.

        Toegestaan door: de user zelf, OC.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
      tags:
        - User
  '/user/{user_id}/comments/':
    parameters:
      - schema:
          type: integer
          example: 123
        name: user_id
        in: path
        required: true
    get:
      summary: Get user comments
      operationId: get-user-comments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: comment id
                        body:
                          type: string
                        date:
                          type: string
                          description: datetime in UTC
                        issue:
                          type: object
                          description: issue id
                          properties:
                            id:
                              type: integer
                            title:
                              type: string
                        upvotes:
                          type: integer
                          description: aantal upvotes
                        downvotes:
                          type: integer
                          description: aantal downvotes
                        parent_issue:
                          type:
                            - integer
                            - 'null'
                          description: ''
                        parent_comment:
                          type:
                            - integer
                            - 'null'
                      required:
                        - id
                        - body
                        - date
                        - issue
                        - upvotes
                        - downvotes
                        - parent_issue
                        - parent_comment
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response:
                      - id: 1
                        body: Comment body
                        date: '2020-06-18T10:14:30.229Z'
                        issue: 1
                        upvotes: 0
                        downvotes: 0
                        parent_issue: 1
                        parent_comment: null
                      - id: 2
                        body: Comment body
                        date: '2020-06-18T10:14:38.558Z'
                        issue: 1
                        upvotes: 0
                        downvotes: 0
                        parent_issue: 1
                        parent_comment: null
                      - id: 3
                        body: Comment body
                        date: '2020-06-18T10:14:39.617Z'
                        issue: 1
                        upvotes: 0
                        downvotes: 0
                        parent_issue: 1
                        parent_comment: null
                      - id: 4
                        body: Comment body
                        date: '2020-06-18T10:14:56.313Z'
                        issue: 1
                        upvotes: 0
                        downvotes: 0
                        parent_issue: null
                        parent_comment: 2
                      - id: 5
                        body: Comment body
                        date: '2020-06-18T10:15:02.815Z'
                        issue: 1
                        upvotes: 0
                        downvotes: 0
                        parent_issue: null
                        parent_comment: 4
                      - id: 6
                        body: Comment body
                        date: '2020-06-18T10:15:08.058Z'
                        issue: 1
                        upvotes: 0
                        downvotes: 0
                        parent_issue: null
                        parent_comment: 3
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: |-
        Haalt alle comments van de user op.

        Toegestaan door: de user zelf, docenten, OC.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
      tags:
        - User
  '/issue/{issue_id}/comments/':
    parameters:
      - schema:
          type: integer
          example: 123
        name: issue_id
        in: path
        required: true
    get:
      summary: Get issue comments
      operationId: get-issue-comments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: comment id
                        body:
                          type: string
                        date:
                          type: string
                          description: datetime in UTC
                        user:
                          type: integer
                          description: issue id
                        upvotes:
                          type: integer
                          description: aantal upvotes
                        downvotes:
                          type: integer
                          description: aantal downvotes
                        comments:
                          type: array
                          description: zie voorbeeld
                          items: {}
                      required:
                        - id
                        - body
                        - date
                        - user
                        - upvotes
                        - downvotes
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response:
                      - id: 1
                        body: Comment body
                        date: '2020-06-18T10:14:30.229Z'
                        user: 1
                        upvotes: 0
                        downvotes: 0
                        comments: []
                      - id: 2
                        body: Comment body
                        date: '2020-06-18T10:14:38.558Z'
                        user: 1
                        upvotes: 0
                        downvotes: 0
                        comments:
                          - id: 4
                            body: Comment body
                            date: '2020-06-18T10:14:56.313Z'
                            user: 1
                            upvotes: 0
                            downvotes: 0
                            comments:
                              - id: 5
                                body: Comment body
                                date: '2020-06-18T10:15:02.815Z'
                                user: 1
                                upvotes: 0
                                downvotes: 0
                                comments: []
                      - id: 3
                        body: Comment body
                        date: '2020-06-18T10:14:39.617Z'
                        user: 1
                        upvotes: 0
                        downvotes: 0
                        comments:
                          - id: 6
                            body: Comment body
                            date: '2020-06-18T10:15:08.058Z'
                            user: 1
                            upvotes: 0
                            downvotes: 0
                            comments: []
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: 'Haalt alle comments van een issue op, in een nested layout.'
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
      tags:
        - Issue
  /course/all/:
    get:
      summary: Get all courses
      operationId: get-course-all
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: object
                    required:
                      - courses
                    properties:
                      courses:
                        type: array
                        items:
                          type: string
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response:
                      courses:
                        - abc72
                        - def89
                        - ghi21
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: |-
        Haalt alle course codes (string) van alle courses op.

        Voor nu ook nog de geremovede courses.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
      tags:
        - Course
    parameters: []
  /course/new/:
    post:
      summary: Create course
      operationId: post-course-new
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: 'null'
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response: null
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: |-
        Maak een nieuwe course aan.

        Mogelijk later met optie tot toevoegen van TAs en docenten.

        Toegestaan door: docenten, OC.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
        - schema:
            type: string
            default: text/plain
            example: application/json
          in: header
          name: Content-Type
          required: true
      tags:
        - Course
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: course id / vakcode
                  example: abc123
                name:
                  type: string
                  example: "Inleiding API's maken"
              required:
                - code
                - name
        description: 'POST data, in JSON formaat.'
    parameters: []
  '/issue/{issue_id}/remove/':
    parameters:
      - schema:
          type: integer
          example: 123
        name: issue_id
        in: path
        required: true
    post:
      summary: Remove issue
      operationId: post-issue-remove
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: 'null'
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response: null
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: |-
        Verwijdert (soft) een issue.

        Toegestaan door: docenten, OC.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
      tags:
        - Issue
  '/issue/{issue_id}/resolve/':
    parameters:
      - schema:
          type: integer
          example: 123
        name: issue_id
        in: path
        required: true
    post:
      summary: Resolve issue
      operationId: post-issue-resolve
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: 'null'
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response: null
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: |-
        Resolved een issue.

        Toegestaan door: TA's, docenten, OC.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
      tags:
        - Issue
  /issue/new/:
    post:
      summary: Create issue
      operationId: post-issue-new
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: object
                    required:
                      - issue_id
                    properties:
                      issue_id:
                        type: integer
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response: null
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: Maak een nieuwe issue aan.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
        - schema:
            type: string
            default: text/plain
            example: application/json
          in: header
          name: Content-Type
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course_code:
                  type: string
                  description: course id / vakcode
                  example: abc123
                title:
                  type: string
                  example: "Inleiding API's maken"
                body:
                  type: string
                  example: Stap 1. maak een wiki
              required:
                - course_code
                - title
                - body
            examples:
              Voorbeeld:
                value:
                  course_code: abc123
                  title: HELPPP
                  body:
                    - '░░░░░░░░▄▄▄▀▀▀▄▄███▄░░░░░░░░░░░░░░ '
                    - '░░░░░▄▀▀░░░░░░░▐░▀██▌░░░░░░░░░░░░░ '
                    - '░░░▄▀░░░░▄▄███░▌▀▀░▀█░░░░░░░░░░░░░ '
                    - '░░▄█░░▄▀▀▒▒▒▒▒▄▐░░░░█▌░░░░░░░░░░░░ '
                    - '░▐█▀▄▀▄▄▄▄▀▀▀▀▌░░░░░▐█▄░░░░░░░░░░░ '
                    - '░▌▄▄▀▀░░░░░░░░▌░░░░▄███████▄░░░░░░ '
                    - '░░░░░░░░░░░░░▐░░░░▐███████████▄░░░ '
                    - '░░░░░le░░░░░░░▐░░░░▐█████████████▄ '
                    - '░░░░toucan░░░░░░▀▄░░░▐█████████████▄ '
                    - '░░░░░░has░░░░░░░░▀▄▄███████████████ '
                    - '░░░░░arrived░░░░░░░░░░░░█▀██████░░ '
        description: 'POST data, in JSON formaat.'
      tags:
        - Issue
    parameters: []
  '/course/{code}/':
    get:
      summary: Get course details
      operationId: get-course-details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: object
                    required:
                      - name
                      - teachers
                    properties:
                      name:
                        type: string
                      teachers:
                        type: array
                        items:
                          type: integer
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response:
                      name: "Inleiding API's maken"
                      teachers:
                        - 1
                        - 2
                        - 3
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: Haalt course info op.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
      tags:
        - Course
    parameters:
      - schema:
          type: string
          example: abc123
        name: code
        in: path
        description: ''
        required: true
  '/course/{code}/remove/':
    post:
      summary: Remove course
      operationId: post-course-remove
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: 'null'
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response: null
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: |-
        Verwijdert (soft) een course. Issues blijven voor nu bestaan.

        Toegestaan door: docenten, OC.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
      tags:
        - Course
    parameters:
      - schema:
          type: string
          example: abc123
        name: code
        in: path
        description: ''
        required: true
  '/course/{code}/modify/':
    post:
      summary: Modify course
      operationId: post-course-modify
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: 'null'
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response: null
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: |-
        Wijzig een course. Nieuwe docenten/TA's kunnen toegevoegd, verwijderd of overschreven worden, respectievelijk de `method`: "add", "remove" en "overwrite".

        Toegestaan door: docenten, OC.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
        - schema:
            type: string
            example: application/json
            default: text/plain
          in: header
          name: Content-Type
      tags:
        - Course
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                teachers:
                  type: object
                  properties:
                    method:
                      type: string
                      description: 'add, remove of overwrite'
                    user_ids:
                      type: array
                      items:
                        type: integer
                  required:
                    - method
                    - user_ids
            examples:
              Voorbeeld:
                value:
                  name: Nieuwe course naam
                  faculty:
                    method: overwrite
                    user_ids:
                      - 1
                      - 57
                      - 12
    parameters:
      - schema:
          type: string
          example: abc123
        name: code
        in: path
        description: ''
        required: true
  '/comment/{comment_id}/modify':
    post:
      summary: Modify comment
      operationId: post-comment-modify
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: 'null'
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response: null
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: "Wijzig een comment. \n\nToegestaan door: de user zelf."
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
        - schema:
            type: string
            example: application/json
            default: text/plain
          in: header
          name: Content-Type
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
            examples:
              Voorbeeld:
                value:
                  body: Nieuwe comment tekst.
      tags:
        - Comment
    parameters:
      - schema:
          type: integer
          example: 123
        name: comment_id
        in: path
        description: ''
        required: true
  '/comment/{comment_id}/vote/{vote_type}':
    post:
      summary: Vote on a comment
      operationId: post-comment-vote
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: 'null'
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response: null
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: Up/downvote een comment.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
      tags:
        - Comment
    parameters:
      - schema:
          type: integer
          example: 123
        name: comment_id
        in: path
        description: ''
        required: true
      - schema:
          type: string
          example: up
        name: vote_type
        in: path
        required: true
        description: up of down
  '/issue/{issue_id}/vote/{vote_type}':
    post:
      summary: Vote on a issue
      operationId: post-comment-vote
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: 'null'
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response: null
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: 'Up/downvote een issue. '
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
      tags:
        - Issue
    parameters:
      - schema:
          type: integer
          example: 123
        name: issue_id
        in: path
        description: ''
        required: true
      - schema:
          type: string
          example: up
        name: vote_type
        in: path
        required: true
        description: up of down
  '/comment/{comment_id}/remove':
    post:
      summary: Remove comment
      operationId: post-comment-remove
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: 'null'
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response: null
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: "Verwijder (hard) een comment. \n\nToegestaan door: de user zelf, docenten, OC."
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
      tags:
        - Comment
    parameters:
      - schema:
          type: integer
          example: 123
        name: comment_id
        in: path
        description: ''
        required: true
  '/course/{code}/issues/':
    get:
      summary: Get course issues
      operationId: get-course-issues
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: array
                    items:
                      type: object
                      properties:
                        issue_id:
                          type: integer
                        course:
                          type: object
                          properties:
                            code:
                              type: string
                            name:
                              type: string
                        user_id:
                          type: integer
                        title:
                          type: string
                        body:
                          type: string
                        status:
                          type: integer
                          description: '0:public, 2:resolved'
                        date:
                          type: string
                        upvotes:
                          type: integer
                          description: aantal upvotes
                        downvotes:
                          type: integer
                          description: aantal downvotes
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response:
                      - issue_id: 1
                        course:
                          code: course1
                          name: Mijn course naam
                        user_id: 1
                        title: Issue1
                        body: body1
                        status: 0
                        date: '2020-06-04T20:59:22.859Z'
                        upvotes: 1
                        downvotes: 1
                      - issue_id: 2
                        course:
                          code: course1
                          name: Mijn course naam
                        user_id: 2
                        title: Issue2
                        body: body2
                        status: 2
                        date: '2021-06-04T20:59:22.859Z'
                        upvotes: 2
                        downvotes: 1
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: Haalt alle issues van een course op. Verwijderde issues zijn niet zichtbaar.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
      tags:
        - Course
    parameters:
      - schema:
          type: string
          example: abc123
        name: code
        in: path
        description: ''
        required: true
  '/user/{user_id}/remove/':
    parameters:
      - schema:
          type: integer
          example: 123
        name: user_id
        in: path
        required: true
    post:
      summary: Remove user
      operationId: post-user-remove
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: 'null'
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response: null
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: Verwijdert een user. Ook uit de database.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
      tags:
        - User
  '/user/{user_id}/modify/':
    parameters:
      - schema:
          type: integer
          example: 123
        name: user_id
        in: path
        required: true
    post:
      summary: Modify user
      operationId: post-user-modify
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: 'null'
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response: null
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: |-
        Wijzig een user.

        Toegestaan door: de user zelf.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
        - schema:
            type: string
            default: text/plain
            example: application/json
          in: header
          name: Content-Type
          required: true
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
            examples:
              Voorbeeld 1:
                value:
                  email: nieuwe@email.nl
                  password: nieuwplaintextw8woord
                  first_name: Jonas
                  last_name: Velders
              Voorbeeld 2:
                value:
                  email: nieuwe@email.nl
                  last_name: Velders
  '/user/{user_id}/promote/':
    parameters:
      - schema:
          type: integer
          example: 123
        name: user_id
        in: path
        required: true
    post:
      summary: Promote user
      operationId: post-user-promote
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: 'null'
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response: null
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: "Update een user rol. Momenteel nog niet aan een vak gekoppeld.\n\nMogelijk promotions (user rollen): \n\n| Code | Rol |\n| :--: | ----- |\n| 1    | Leerling |\n| 2    | TA |\n| 3    | Docent |\n| 4    | OC |\n\nEen user kan een andere user (met een lager auth niveau) promoten naar een hoger of gelijk niveau als de promotende user.\n\nOftewel: \n- TA kan leerlingen promoten naar TAs,\n- Docent kan leerlingen en TAs promoten naar TAs of Docenten \n- OC kan leerlingen, TAs en docenten promoten naar TAs, docenten of OC.\n\nToegestaan door: TAs, docenten en OC."
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
        - schema:
            type: string
            default: text/plain
            example: application/json
          in: header
          name: Content-Type
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                promotion:
                  type: integer
            examples:
              Voorbeeld:
                value:
                  promotion: 3
  /user/login/:
    parameters: []
    post:
      summary: Login
      operationId: post-user-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: object
                    required:
                      - access_token
                      - user_id
                    properties:
                      access_token:
                        type: string
                        example: c7a19cf986eeb6b447719aadbc58f98b061c28b3
                      user_id:
                        type: integer
                        example: 5
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response:
                      access_token: c7a19cf986eeb6b447719aadbc58f98b061c28b3
                      user_id: 5
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      description: |-
        Authenticeert een gebruiker. Returnt een `access_token` en een `user_id`.


        Geldigheid van deze token is standaard 180 minuten.
      parameters:
        - schema:
            type: string
            default: text/plain
            example: application/json
          in: header
          name: Content-Type
          description: ''
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  maxLength: 254
                  example: 12345678@student.uva.nl
                  description: e-mail veld
                password:
                  type: string
                  example: mijnpasswordinplaintext
                  maxLength: 254
                  minLength: 9
                  description: plaintext wachtwoord
              required:
                - email
                - password
            examples:
              Voorbeeld:
                value:
                  email: 12345678@student.uva.nl
                  password: mijnpasswordinplaintext
        description: 'POST data, in JSON formaat.'
      tags:
        - User
  '/issue/{issue_id}/':
    parameters:
      - schema:
          type: integer
          example: 123
        name: issue_id
        in: path
        required: true
    get:
      summary: Get issue details
      tags:
        - Issue
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  response:
                    type: object
                    required:
                      - issue_id
                      - course
                      - user_id
                      - title
                      - body
                      - status
                      - date
                      - upvotes
                      - downvotes
                    properties:
                      issue_id:
                        type: integer
                      course:
                        type: object
                        properties:
                          code:
                            type: string
                          name:
                            type: string
                      user_id:
                        type: integer
                      title:
                        type: string
                      body:
                        type: string
                      status:
                        type: integer
                        description: '0:public, 2:resolved'
                      date:
                        type: string
                      upvotes:
                        type: integer
                        description: aantal upvotes
                      downvotes:
                        type: integer
                        description: aantal downvotes
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response:
                      issue_id: 1
                      course:
                        code: course1
                        name: Mijn course naam
                      user_id: 1
                      title: Issue1
                      body: body1
                      status: 0
                      date: '2020-06-04T20:59:22.859Z'
                      upvotes: 1
                      downvotes: 1
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                required:
                  - error
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                required:
                  - error
      operationId: get-issue-issue_id
      description: Haalt issue info op. Verwijderde issues zijn niet zichtbaar.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
  '/comment/{comment_id}/':
    parameters:
      - schema:
          type: integer
          example: 123
        name: comment_id
        in: path
        required: true
    get:
      summary: Get comment details
      tags:
        - Comment
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                  response:
                    type: object
                    required:
                      - id
                      - body
                      - date
                      - issue
                      - upvotes
                      - downvotes
                      - parent_issue
                      - parent_comment
                    properties:
                      id:
                        type: integer
                        description: comment id
                      body:
                        type: string
                      date:
                        type: string
                        description: datetime in UTC
                      issue:
                        type: integer
                        description: issue id
                      upvotes:
                        type: integer
                        description: aantal upvotes
                      downvotes:
                        type: integer
                        description: aantal downvotes
                      parent_issue:
                        type:
                          - integer
                          - 'null'
                        description: ''
                      parent_comment:
                        type:
                          - integer
                          - 'null'
                required:
                  - error
                  - response
              examples:
                Voorbeeld 1:
                  value:
                    error: 0
                    response:
                      id: 1
                      body: course1
                      date: '2020-06-04T20:59:22.859Z'
                      issue: 1
                      upvotes: 100
                      downvotes: 100
                      parent_issue: 1
                      parent_comment: null
                Voorbeeld 2:
                  value:
                    error: 0
                    response:
                      id: 1
                      body: course1
                      date: '2020-06-04T20:59:22.859Z'
                      issue: 1
                      upvotes: 100
                      downvotes: 100
                      parent_issue: null
                      parent_comment: 14
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                required:
                  - error
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                required:
                  - error
      operationId: get-comment
      description: Haalt comment info op.
      parameters:
        - schema:
            type: string
            example: ce527a508a0cf05f3f28f2e85d7c060bcbc064a5
          in: query
          name: access_token
          required: true
  '/issue/{issue_id}/modify/':
    parameters:
      - schema:
          type: string
        name: issue_id
        in: path
        required: true
    post:
      summary: Modify an issue
      tags:
        - Issue
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: error code is altijd 0 op succes
                    example: 0
                    default: 0
                  response:
                    type: 'null'
                required:
                  - error
                  - response
              examples:
                Voorbeeld:
                  value:
                    error: 0
                    response: null
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 5
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    minimum: 1
                    exclusiveMinimum: true
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    description: Is always 1 on status=500
                    minimum: 1
                    exclusiveMinimum: true
                    default: 0
                    example: 1
                required:
                  - error
              examples:
                Voorbeeld:
                  value:
                    error: 1
      operationId: post-issue-issue_id-modify
      description: |-
        Wijzig een issue.

        Voor het wijzigen van up- of downvotes gebruik: /issue/{issue-id}/vote/.

        Voor het wijzigen van de status van een issue gebruik: /issue/{issue-id}/resolve/ of /issue/{issue-id}/remove/.
      parameters:
        - schema:
            type: integer
          in: query
          name: access_token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                course_code:
                  type: string
components:
  schemas:
    User:
      title: User
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        password:
          type: string
          format: password
        email:
          type: string
          format: email
        uva_id:
          type: integer
  securitySchemes: {}
